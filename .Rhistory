"hello world"
plot(cars)
__hello world__
__hello world__
_hello world_
__hello world__
"hello world"
_hello world_
load("C:/Users/user/Downloads/Titanic_class_dummies.Rda")
load("C:/Users/user/Downloads/Titanic_class_dummies.Rda")
install.packages('Rtools')
install.packages('Rtools4.2')
install.packages('Rtools 4.2')
install.packages('Rtools42')
install.packages('Rtools40')
install.packages('devtools')
install.packages('plm')
library(plm)
library(devtools)
install.packeges(Rtools)
install.packages(Rtools)
install.packages('Rtools')
library('punitroots')
help('purtest')
help('??purtest')
install.packages('Rdpack')
install.packages('plm')
library(tidyverse)
install.packages(‘dbplyr’)
install.packages(dbplyr)
install.packages('dbplyr')
install.packages("dbplyr")
install.packages("dbplyr")
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
libssl-dev
install.packages("readr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
# FOR THE CEO DATA SET
pr_model_ceo_BM<- glm(GENDER_MALE ~ ROA + AGE + PRCC + TRS1YR +
LAG_TRS1YR, SPCODE_new_SP_index,
family = binomial(), data = ceo_data)
#*************************************************************
#### Thesis Statement: Women Travelers in a man's world #####
##   Thesis, 2020
#*************************************************************
# 1.  CLEAR SESSION ####
'The current command is useful every time we want to clear the memory'
rm(list = ls())                       # Clear previous environment
if(!is.null(dev.list())) dev.off()    # Clear previous plots
# 2.  IMPORTING LIBRARIES YOU NEED ####
library(car)
library(plm)
library(AER)
library(urca)
library(vars)
library(MASS)
library(knitr)
library(stats)
library(dynlm)
library(broom)
library(tsDyn)
library(readxl)
library(gplots)
library(lmtest)
library(carData)
library(tseries)
library(magrittr)
library(forecast)
library(estimatr)
library(skedastic)
library(bvartools)
library(tidyverse)
library(stargazer)
library(tidyselect)
library(fastDummies)
library(multiwayvcov)
library(bacondecomp)
library(MatchIt)
library(dplyr)
library(ggplot2)
# 3.  SET WORKING DIRECTORY ####
setwd('~/University/Econometrics and Operations Research/thesis_andre lucas/gender_discrimination')
# 4.  READ EXCEL FILE ####
data = read_excel("ceo_official_dataset.xlsx")
# 5.  QUICK DESCRIPTIVE SUMMARY OF THE DATA ####
summary(data)
str(data)
# 6.  CLEAN THE DATA #####
'In this section we are going to clean the data, which means to create dummies,
to rename variables, to correct the data types and to handle all the missing
values'
# re-code the SPCODE variable in order to have two groups from the current 4
data$SPCODE_new[data$SPCODE == 'SP'] <- 'SP_index'
data$SPCODE_new[data$SPCODE == 'MD'] <- 'non_SP'
data$SPCODE_new[data$SPCODE == 'SM'] <- 'non_SP'
data$SPCODE_new[data$SPCODE == 'EX'] <- 'non_SP'
# replace the NA values as well in order to have only 2 dummies
data$SPCODE_new[is.na(data$SPCODE_new)] = 'non_SP'
# create dummies
data <- dummy_cols(data, select_columns = 'GENDER')
data <- dummy_cols(data, select_columns = 'SPCODE_new')
#print(data)
# creating another subset with the CEOS from the general data set
ceo_data <- data[data$CEO_NEW == 'CEO', c('YEAR','TRS1YR','ROA','AGE',
'MKTVAL', 'PRCC', 'GENDER_FEMALE',
'GENDER_MALE','LAG_TRS1YR',
'CO_PER_ROL','SPCODE_new','SPINDEX',
'SPCODE_new_non_SP',
'SPCODE_new_SP_index' )]
# creating another subset for the CFOS from the general data set
cfo_data <- data[data$CFO_NEW == 'CFO', c('YEAR','TRS1YR','ROA','AGE',
'MKTVAL','PRCC', 'GENDER_FEMALE',
'GENDER_MALE', 'LAG_TRS1YR',
'CO_PER_ROL','SPCODE_new','SPINDEX',
'SPCODE_new_non_SP',
'SPCODE_new_SP_index' )]
# creating a data set for both the CEO and the CFO combined
ceo_cfo_data <- data[data$CEO_NEW == 'CEO' | data$CFO_NEW == 'CFO',
c('YEAR', 'TRS1YR','ROA','AGE','MKTVAL','PRCC',
'GENDER_FEMALE','GENDER_MALE', 'LAG_TRS1YR','CO_PER_ROL',
'SPCODE_new','SPINDEX','SPCODE_new_non_SP',
'SPCODE_new_SP_index' )]
# declaring the new subset as a data frame
ceo_data <- data.frame(ceo_data)
cfo_data <- data.frame(cfo_data)
ceo_cfo_data <- data.frame(ceo_cfo_data)
'CHECKING MISSING VALUES IN THE SUBSET AND THE ENTIRE DATASET'
# check which columns contain Nan values
names(which(colSums(is.na(ceo_data))>0))
names(which(colSums(is.na(cfo_data))>0))
names(which(colSums(is.na(ceo_cfo_data))>0))
# replace all the Nan values with 0
ceo_data[is.na(ceo_data)] = 0
cfo_data[is.na(cfo_data)] = 0
ceo_cfo_data[is.na(ceo_cfo_data)] = 0
# recheck which columns contain Nan values
names(which(colSums(is.na(ceo_data))>0))
names(which(colSums(is.na(cfo_data))>0))
names(which(colSums(is.na(ceo_cfo_data))>0))
# FOR THE CEO DATA SET
pr_model_ceo_BM<- glm(GENDER_MALE ~ ROA + AGE + PRCC + TRS1YR +
LAG_TRS1YR, SPCODE_new_SP_index,
family = binomial(), data = ceo_data)
coeftest(pr_model_ceo_BM, vcov = vcovHC, type = "HC1")
View(ceo_data)
View(data)
